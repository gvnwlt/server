import java.io.*;import java.net.*;/** * This program is a very simple Web server.  When it receives a HTTP request, * it just sends the request back to the client. This default port this * server listens to is 1500. *  * Usage: * * 	java HttpRequestMirror <port> *  **/public class HttpRequestMirror {  public static void main(String args[]) throws IOException {      // Get the port to listen on	int port = 1500;	if (args.length == 1)		port = Integer.parseInt(args[0]);    try {      /* Comment Here */       // Creates a socket to listen to incoming requests and sends standared       // output to notify what port it has binded to. The loop continually checks      // for requests and accepts them.       ServerSocket ss = new ServerSocket(port);      System.out.println("Server bound at port " + ss.getLocalPort());      while (true) {        Socket client = ss.accept();        /* Comment Here */        // Reads in a stream to a buffer and creates an output stream to send         // out to whomever.         BufferedReader in =           new BufferedReader(new InputStreamReader(client.getInputStream()));        PrintWriter out =          new PrintWriter(new OutputStreamWriter(client.getOutputStream()));        /* Comment Here */        // Prints the header type content type into the output stream then         // flushes the buffer.         out.println("HTTP/1.1 200 ");                     out.println("Content-Type: text/plain");           out.println();                         // send the empty line            out.flush();        /* Comment Here */          // Stores lines read in from the input stream.         // Every line that is read is print into the output stream and         // exits the loop once a blank line is reached.         String line;        while((line = in.readLine()) != null) {          if (line.length() == 0) break;          out.println(line);        }        /* Comment Here */        // Closes the output/input streams and the socket.         out.close();        in.close();        client.close();      }     }    catch (Exception e) {      System.err.println(e);      System.err.println("Usage: java HttpRequestMirror <port>");    }  }}